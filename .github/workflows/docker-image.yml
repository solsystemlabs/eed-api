name: Docker Image CI
on:
  push:
    branches: [ "master" ]
jobs:
    build:
      runs-on: self-hosted
      steps:
        - name: Checkout Code
          uses: actions/checkout@v4.1.2
          
        # - name: 'Create env file'
        #   run: |
        #     touch .env
        #     echo "${{ secrets.ENV_FILE }}" > ${{ github.workspace }}/.env

        - name: Create dotenv
          # You may pin to the exact commit or the version.
          # uses: iamsauravsharma/create-dotenv@18b2362db24ff1016179b5fefc8e38dbe77b41a5
          uses: iamsauravsharma/create-dotenv@v2.0.1
          with:
            file-path: ${{ github.workspace }}/.env
          env:
            DATABASE_URL: ${{ secrets.DATABASE_URL }}
            PORT: ${{ secrets.PORT }}
        
        - name: Login to GitHub Container Registry
          uses: docker/login-action@v3.1.0
          with:
            registry: ghcr.io
            username: ${{ github.repository_owner }}
            password: ${{ secrets.GITHUB_TOKEN }}
        - name: Build and Push Docker Image
          uses: docker/build-push-action@v5.3.0
          with:
            context: .
            push: true
            tags: |
              ghcr.io/solsystemlabs/eed-api:latest
    deploy:
      needs: build
      runs-on: self-hosted
      
      steps:
        - name: Checkout code
          uses: actions/checkout@v4.1.2

        - name: ssh-job
          # You may pin to the exact commit or the version.
          # uses: nekiro/ssh-job@e0d177751aced5bcaf110ce4d782a681e5e12856
          uses: nekiro/ssh-job@v1.0.5
          with:
            # Target machine hostname or ip
            host: ${{ secrets.PORTAINER_HOST }}
            # Ssh private key used to connect to target machine
            key: ${{ secrets.RUNNER_PRIVATE_KEY }}
            # Ssh user
            user: ${{ secrets.GH_USER_NAME }}
            # Bash commands ran on target machine
            command: |
              echo $CR_PAT | docker login ghcr.io -u solsystemlabs --password-stdin
          
          
        - uses: chaplyk/docker-compose-remote-action@v1.1
          name: Docker Compose Remote Action
          with:
            ssh_host: ${{ secrets.PORTAINER_HOST }}
            ssh_user: ${{ secrets.GH_USER_NAME }}
            ssh_key: ${{ secrets.RUNNER_PRIVATE_KEY }}
            compose_file: docker-compose.yaml
            pull: true
            force_recreate: true
